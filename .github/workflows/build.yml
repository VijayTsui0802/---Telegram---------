name: Build and Release

on:
  push:
    branches:
      - main  # 当推送到main分支时触发
    tags:
      - 'v*'  # 当推送v开头的tag时触发

permissions:
  contents: write  # 添加写入权限

jobs:
  build:
    runs-on: windows-latest  # 使用Windows环境

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Verify assets directory
      run: |
        if (-not (Test-Path "assets")) {
            New-Item -ItemType Directory -Path "assets"
        }
        if (-not (Test-Path "assets\logo.ico")) {
            Write-Error "Error: logo.ico not found"
            exit 1
        }
        
    - name: Create spec file
      run: |
        echo 'import os' > build.spec
        echo 'block_cipher = None' >> build.spec
        echo 'a = Analysis([' >> build.spec
        echo '    "gui_main.py",' >> build.spec
        echo '    ],' >> build.spec
        echo '    pathex=[],' >> build.spec
        echo '    binaries=[],' >> build.spec
        echo '    datas=[' >> build.spec
        echo '        ("modules/styles.qss", "modules"),' >> build.spec
        echo '        ("modules/*.py", "modules"),' >> build.spec
        echo '        ("assets/logo.ico", "assets"),' >> build.spec
        echo '        ("assets/logo.svg", "assets"),' >> build.spec
        echo '    ],' >> build.spec
        echo '    hiddenimports=[],' >> build.spec
        echo '    hookspath=[],' >> build.spec
        echo '    hooksconfig={},' >> build.spec
        echo '    runtime_hooks=[],' >> build.spec
        echo '    excludes=[],' >> build.spec
        echo '    win_no_prefer_redirects=False,' >> build.spec
        echo '    win_private_assemblies=False,' >> build.spec
        echo '    cipher=block_cipher,' >> build.spec
        echo '    noarchive=False,' >> build.spec
        echo ')' >> build.spec
        echo 'pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)' >> build.spec
        echo 'exe = EXE(' >> build.spec
        echo '    pyz,' >> build.spec
        echo '    a.scripts,' >> build.spec
        echo '    a.binaries,' >> build.spec
        echo '    a.zipfiles,' >> build.spec
        echo '    a.datas,' >> build.spec
        echo '    [],' >> build.spec
        echo '    name="TGCloud",' >> build.spec
        echo '    debug=False,' >> build.spec
        echo '    bootloader_ignore_signals=False,' >> build.spec
        echo '    strip=False,' >> build.spec
        echo '    upx=True,' >> build.spec
        echo '    upx_exclude=[],' >> build.spec
        echo '    runtime_tmpdir=None,' >> build.spec
        echo '    console=False,' >> build.spec
        echo '    disable_windowed_traceback=False,' >> build.spec
        echo '    target_arch=None,' >> build.spec
        echo '    codesign_identity=None,' >> build.spec
        echo '    entitlements_file=None,' >> build.spec
        echo '    icon=os.path.join("assets", "logo.ico")' >> build.spec
        echo ')' >> build.spec
        
    - name: Build with PyInstaller
      run: |
        pyinstaller build.spec
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')  # 只在推送tag时创建Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./dist/TGCloud.exe
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        draft: false
        prerelease: false 